
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode temp1=new ListNode(-1);
        ListNode cur=temp1;
       // traverse l1 and l2 till the end and then compare the value of l1 and l2



        while(l1 != null && l2 != null){
            if(l1.val <= l2.val ){
              
              cur.next=l1;
              l1=l1.next;
            }else{
                
             cur.next = l2;
             l2=l2.next;
            }
           // temp1=temp1.next
           cur = cur.next;
        }
          //we check if either l1 and l2 list are null or not.
       cur.next=l1==null ?l2:l1;
       return temp1.next;
        
    }
}
